!Does this comment work?

FUNC predicateExample (a,b) RESULT(retval) LOGICAL::retval IF a>b THEN retval=a ELSE IF a<b THEN retval=a
ELSE retval=a END IF END FUNCTION predicateExample
FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?
	public static boolean predicateExample(int a, int b){
		if(a > b){
			return a;
		}
		else if(a < b){
			return b;
		}
		else{
			return a + b;
		}
	}

FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?

FUNC predicateExample (a,b) RESULT(retval) LOGICAL::retval IF a>b THEN retval=a ELSE IF a<b THEN retval=a
ELSE retval=a END IF END FUNCTION predicateExample
FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?
	public static boolean predicateExample(int a, int b){
		if(a > b){
			return a;
		}
		else if(a < b){
			return b;
		}
		else{
			return a + b;
		}
	}

FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?

FUNC predicateExample (a,b) RESULT(retval) LOGICAL::retval IF a>b THEN retval=a ELSE IF a<b THEN retval=a
ELSE retval=a END IF END FUNCTION predicateExample
FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?
	public static boolean predicateExample(int a, int b){
		if(a > b){
			return a;
		}
		else if(a < b){
			return b;
		}
		else{
			return a + b;
		}
	}

FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?

FUNC predicateExample (a,b) RESULT(retval) LOGICAL::retval IF a>b THEN retval=a ELSE IF a<b THEN retval=a
ELSE retval=a END IF END FUNCTION predicateExample
FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?
	public static boolean predicateExample(int a, int b){
		if(a > b){
			return a;
		}
		else if(a < b){
			return b;
		}
		else{
			return a + b;
		}
	}

FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?

FUNC predicateExample (a,b) RESULT(retval) LOGICAL::retval IF a>b THEN retval=a ELSE IF a<b THEN retval=a
ELSE retval=a END IF END FUNCTION predicateExample
FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?
	public static boolean predicateExample(int a, int b){
		if(a > b){
			return a;
		}
		else if(a < b){
			return b;
		}
		else{
			return a + b;
		}
	}

FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?

FUNC predicateExample (a,b) RESULT(retval) LOGICAL::retval IF a>b THEN retval=a ELSE IF a<b THEN retval=a
ELSE retval=a END IF END FUNCTION predicateExample
FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?
	public static boolean predicateExample(int a, int b){
		if(a > b){
			return a;
		}
		else if(a < b){
			return b;
		}
		else{
			return a + b;
		}
	}

FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?

FUNC predicateExample (a,b) RESULT(retval) LOGICAL::retval IF a>b THEN retval=a ELSE IF a<b THEN retval=a
ELSE retval=a END IF END FUNCTION predicateExample
FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?
	public static boolean predicateExample(int a, int b){
		if(a > b){
			return a;
		}
		else if(a < b){
			return b;
		}
		else{
			return a + b;
		}
	}

FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?

FUNC predicateExample (a,b) RESULT(retval) LOGICAL::retval IF a>b THEN retval=a ELSE IF a<b THEN retval=a
ELSE retval=a END IF END FUNCTION predicateExample
FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?
	public static boolean predicateExample(int a, int b){
		if(a > b){
			return a;
		}
		else if(a < b){
			return b;
		}
		else{
			return a + b;
		}
	}

FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?

FUNC predicateExample (a,b) RESULT(retval) LOGICAL::retval IF a>b THEN retval=a ELSE IF a<b THEN retval=a
ELSE retval=a END IF END FUNCTION predicateExample
FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?
	public static boolean predicateExample(int a, int b){
		if(a > b){
			return a;
		}
		else if(a < b){
			return b;
		}
		else{
			return a + b;
		}
	}

FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?

FUNC predicateExample (a,b) RESULT(retval) LOGICAL::retval IF a>b THEN retval=a ELSE IF a<b THEN retval=a
ELSE retval=a END IF END FUNCTION predicateExample
FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething,!Does this comment work?
	public static boolean predicateExample(int a, int b){
		if(a > b){
			return a;
		}
		else if(a < b){
			return b;
		}
		else{
			return a + b;
		}
	}

FUNC doSomething (a,b) RESULT(retval) INTEGER::retval IF b>a THEN print b ELSE IF b<a THEN print a
ELSE print "Does this translator work?"
retval=a END IF
SELECT CASE(a) CASE(1) retval=a
CASE(b) retval=a CASE DEFAULT retval=a END SELECT
retval=a END FUNCTION doSomething
FUNC doSomething (a,b) RESULT(retval) CHARACTER::retval retval=a END FUNCTION doSomething